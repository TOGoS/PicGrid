** [2012-07-31] Idea for new layouter

For a given set of images with weights (these weights can
be assigned arbitrarily), create a single row.
Find the average area / weight.
Create the row again, this time adjusting images that are
too large by attempting to fit them into a cell with
neighboring images that are also too large.

Next, take the width/height of the single row
and calculate how many rows the image set should be split into
to match the target ratio.  Break the single row up into
that many rows, that many -1, -2, +1, and +2, and
hold onto those configurations and their fitness values.

Repeat the 2 steps but making columns instead of rows.

** [2018-10-16] Zero-width crash

#+BEGIN_EXAMPLE
$ picgrid-compose -layouter borce -page-style hover x-rdf-subject:urn:bitprint:YRLZROF2ZKR5GCAUZ7OBMFWG2NCIO3MB.5ILYDI7K3FLR2YBENH477HYHAINKTMNTWLTGDFA
Exception in thread "main" java.lang.AssertionError: assertion failed: Cell width is <= 0: togos.picgrid.layout.LayoutCell@1ae53e9
        at scala.Predef$.assert(Predef.scala:179)
        at togos.picgrid.layout.AutoSpacingLayouter$$anonfun$layout$1.apply(Layouter.scala:99)
        at togos.picgrid.layout.AutoSpacingLayouter$$anonfun$layout$1.apply(Layouter.scala:98)
        at scala.collection.immutable.List.foreach(List.scala:318)
        at togos.picgrid.layout.AutoSpacingLayouter.layout$4348ff2d(Layouter.scala:98)
        at togos.picgrid.Gridifier.gridify$35eef3cf(Gridifier.scala:57)
        at togos.picgrid.Gridifier.gridifyDir$35eef3cf(Gridifier.scala:84)
        at togos.picgrid.Gridifier.gridifyDir(Gridifier.scala:106)
        at togos.picgrid.app.ComposeCommand$.main(ComposeCommand.scala:175)
        at togos.picgrid.app.PicGridCommand$.main(PicGridCommand.scala:166)
        at togos.picgrid.app.PicGridCommand.main(PicGridCommand.scala)
#+END_EXAMPLE

This seems to be a trouble with the 'borce' layouter, because when using 'rowly'...

#+BEGIN_EXAMPLE
$ picgrid-compose -layouter rowly -page-style hover x-rdf-subject:urn:bitprint:YRLZROF2ZKR5GCAUZ7OBMFWG2NCIO3MB.5ILYDI7K3FLR2YBENH477HYHAINKTMNTWLTGDFA
urn:bitprint:6W4PVKPFENWMOKGXCTD5I7WVTFE7NDIG.BTJTX7P4CC4UXLEZH3CL6K5PAW37NLUICWYMZUY
#+END_EXAMPLE

** [2021-05-17] Let's look closer at the gray rectangles

[[http://togos-fbs.nuke24.net/uri-res/raw/urn:bitprint:3NSYXDUQ3VY4Q4335RHFAHPUEONNV7O2.4C3BLSHLQ5BUZ6JFPFSRSQYVW2FA6C6OFUTREGQ/someoldpix.html][e.g. lots of these pictures]].
Let's pick on [[http://togos-fbs.nuke24.net/uri-res/raw/urn:bitprint:ZMBXCX4RTE3JL743IQOCFZBNJ3PDY2WY.OUA7VBJKEZLSTOO6U2W26T2CUXDWCM6X45TKVOY/012843-IMG_7336.JPG][this one]] in particular because it's landscape
so I figure we won't be worrying about rotation.
